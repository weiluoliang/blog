import{_ as e,V as a,W as r,X as t}from"./framework-fdd96744.js";const n={},s=t('<h3 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h3><p>对于用户来说，希望自己使用的软件能够提供持续稳定的服务，不希望在使用的时候出现不可用的情况，那么提高服务的可用性可以说非常重要了，下面我们就来讨论如何提高服务的可用性问题。</p><h3 id="如何提升服务的可用性" tabindex="-1"><a class="header-anchor" href="#如何提升服务的可用性" aria-hidden="true">#</a> 如何提升服务的可用性 ？</h3><p>早在单机时代，如果你的服务挂了，或者这台服务器的网络出问题，那么整个服务将不可用。</p><p>为了解决单机的问题，引入了<strong>集群</strong>，一个服务部署多个节点，当有节点挂了之后，还有其他节点提供服务，对用户来说是无感知的. 只要你的服务还有正常的节点，就可以提供服务。</p><p>引入集群带来了新的问题：</p><ol><li>集群之间的数据同步</li><li>集群的管理（需要选择一个master来管理）</li></ol><h3 id="数据同步问题" tabindex="-1"><a class="header-anchor" href="#数据同步问题" aria-hidden="true">#</a> 数据同步问题</h3><p><strong>Kafka的副本数据的同步实现</strong></p><p><strong>Redis的数据同步实现</strong></p><h3 id="集群的管理" tabindex="-1"><a class="header-anchor" href="#集群的管理" aria-hidden="true">#</a> 集群的管理</h3>',11),h=[s];function i(d,o){return a(),r("div",null,h)}const _=e(n,[["render",i],["__file","关于可用性的思考.html.vue"]]);export{_ as default};
